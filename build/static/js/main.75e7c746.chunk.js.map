{"version":3,"sources":["components/button.tsx","components/home.tsx","App.tsx","components/navbar.tsx","components/h2.tsx","components/login_register_form.tsx","components/callMemeApi.tsx","components/all_meme.tsx","components/route.tsx","index.tsx"],"names":["Button","props","buttonText","console","log","className","type","Home","to","pathname","App","Navbar","state","isRegistration","H2","h2Text","Login_register_form","location","htmlFor","name","id","required","DisplayMeme","useState","memes","setMemes","useEffect","fetch","then","res","json","response","map","meme","src","url","All_meme","Routes","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e7c746.chunk.js","sourcesContent":["import React from 'react'\nimport './CSS/button.css'\n\n\nexport default function Button(props: any) {    // we tell him that we will pass him a props onLogin\n\n    const buttonText = props.buttonText; // I tell what I want I want as props\n    console.log(props);\n    \n    return (\n\n        <button className=\"buttonGlowOnHover\" type=\"button\">{buttonText}</button>\n        \n    )\n}\n","import * as React from \"react\";\nimport DisplayMeme from './callMemeApi'\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport Button from './button'\n\nexport default function Home() {\n    return (\n        <div>\n            <div className=\"container-body\">\n                \n            <h1 className=\"neon\">MEMETON</h1>\n            \n        </div>\n            <h2>The wonderful world of memes</h2>\n                \n                <div className=\"seeAllMemesButton\">\n                    \n                    <Link to={{ pathname: \"/all_meme\"}}><Button buttonText=\"See all memes\" /></Link>\n            \n                </div>\n        </div>\n    )\n\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './components/CSS/App.css';\nimport Home from \"./components/home\"\n\n\n\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n\n            <Home />\n\n        </div>\n    );\n}\n\n\n\n\n\nexport default App;","import * as React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport Button from \"./button\"\n\nimport './CSS/navbar.css'\n\nexport default function Navbar() {\n    return (\n        <nav className=\"container-nav\">\n            <h3>MEMETON</h3>\n            <div className=\"userButtons\">\n                <Link to={{ pathname: \"/login\", state: {isRegistration:false} }}><Button buttonText=\"Login\" /></Link>\n                <Link to={{ pathname: \"/register\", state: {isRegistration:true} }}><Button buttonText=\"Register\" /></Link>\n            </div>\n\n        </nav>\n        \n    )\n\n}\n\n// through router: if path.name/home => show login / register, otherwise hide it","import React from 'react'\nimport './CSS/h2.css'\n\n\nexport default function H2(props: any) {    // we tell him that we will pass him a props onLogin\n\n    const h2Text = props.h2Text; // I tell what I want I want as props\n    console.log(props);\n    \n    return (\n\n        <h2 className=\"loginOrRegister\">{h2Text}</h2>\n        \n    )\n}\n","import React from 'react';\nimport axios from \"axios\";\nimport Button from \"./button\"\nimport './CSS/login_register_form.css'\nimport H2 from \"./h2\"\nimport ButtonHome from './btnBackHome'\n\ntype userInfo = {\n    username: String;\n    password: String;\n    password_verified: String;\n};\n\n\nexport default function Login_register_form(props: any) {\n\n    \n    const isRegistration: boolean = props.location.state.isRegistration;\n    // state works as props, so we pass it to our link;\n    // ! props.location.state.... => how I pass the data via router\n\n\n    // const expanded_form = () => {\n        if (isRegistration === true) {\n            return (\n                \n                <div>\n\n                <div className=\"container\">\n                    <H2 h2Text=\"Login\"/>\n                    <form>\n                        <label htmlFor=\"name\">Username </label>\n                        <input type=\"text\" name=\"username\" id=\"username\" required />\n                    </form>\n                    <form>\n                        <label htmlFor=\"email\">Password </label>\n                        <input type=\"password\" name=\"password\" id=\"password\" required />\n                    <form className=\"verifyPwd\">\n                        <label htmlFor=\"verify pwd\">Verify password </label>\n                        <input type=\"text\" name=\"password\" id=\"password\"  required />\n                    </form>\n                        <div>\n                            <Button buttonText=\"Submit\" />\n                            {/* <ButtonHome btnHomeText=\"Back home\" /> */}\n                        </div>\n    \n                    </form>\n                </div>\n    \n    \n            \n            </div>\n            )\n            \n        \n\n            \n        } else {\n            return (\n            <div>\n\n            <div className=\"container\">\n                <H2 h2Text=\"Login\"/>\n                <form>\n                    <label htmlFor=\"name\">Username </label>\n                    <input type=\"text\" name=\"username\" id=\"username\" required />\n                </form>\n                <form>\n                    <label htmlFor=\"email\">Password </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" required />\n\n                    <div>\n                        <Button buttonText=\"Submit\" />\n                    </div>\n\n                </form>\n            </div>\n\n\n        \n        </div>\n        )\n        }\n    }\n","import React, { useEffect, useState } from \"react\";\nimport './CSS/memeContainer.css';\n\nconst DisplayMeme = () => {\n    const [memes, setMemes] = useState([]);\n\n    useEffect(() => { // useEffect is a hook\n        fetch('http://localhost:3004/all_meme')\n            .then(res =>\n                res.json().then(response => setMemes(response))\n            );\n    }, []); // empty array means the effect is working on mount\n\n    return (\n\n        <div className=\"memeContainer\">\n\n            {memes.map(meme => {\n                return <img src={meme.url} className=\"memeImg\" />\n                })\n            }\n                \n        </div>\n\n//! To see how to parse my JSON I go to network in inspect browser, in this case I have a list with url objects inside, so I use map to loop throw all of thel and find each ones url. \n    );\n}\n\nexport default DisplayMeme","import * as React from \"react\";\nimport DisplayMeme from './callMemeApi'\n\nexport default function All_meme() {\n    return (\n        <div className=\"container-body\">\n                \n            {<DisplayMeme /> }   \n        </div>\n        \n    )\n\n}\n","import React from 'react';\nimport App from '../App'\nimport Navbar from './navbar'\n\nimport { Route, Switch } from 'react-router-dom';\nimport Login_register_form from './login_register_form';\nimport All_meme from './all_meme';\n\nexport const Routes = () => {\n    return (\n        <div>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route exact path=\"/login\" component={Login_register_form} />  \n                <Route exact path=\"/register\" component={Login_register_form} /> \n                <Route exact path=\"/all_meme\" component={All_meme} /> \n\n            </Switch>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Routes } from './components/route';\nimport \"./components/CSS/index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Routes />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}